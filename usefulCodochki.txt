//диапазон дат
from datetime import date, timedelta

start_date = date(2008, 8, 15) 
end_date = date(2008, 9, 15)    # perhaps date.now()

delta = end_date - start_date   # returns timedelta

for i in range(delta.days + 1):
    day = start_date + timedelta(days=i)
    print(day)



\\\\\\\\\\\\\\\\\\\\\\\\\\
# make an out-of-sample forecast
from pandas import read_csv
from pandas import to_datetime
from pandas import DataFrame
from fbprophet import Prophet
from matplotlib import pyplot
#import psycopg2
#from sklearn.metrics import mean_absolute_error

# load data
path = "D:/Projects/prophet/data.csv"
df = read_csv(path, header=0)
# prepare expected column names
df.columns = ['ds', 'y']
df['ds'] = to_datetime(df['ds'])

# define the model
model = Prophet()
# fit the model
model.fit(df)



# define the period for which we want a prediction
future = list()
for x in range(10, 30):
    for v in range(0, 23):
        date = '2021-11-%02d %02d:00:00' % (x, v)
        future.append([date])

future = list()
a = "2012-12-10"
for index, row in df.iterrows():
    if ((str)(row['ds']) > (str)(a)) :
        future.append(row['ds'])
        
future = DataFrame(future)
future.columns = ['ds']
future['ds'] = to_datetime(future['ds'])
# use the model to make a forecast
forecast = model.predict(future)
# summarize the forecast
print(forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].head())
# plot forecast
model.plot(forecast)
pyplot.show()


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
import pandas as pd
import matplotlib.pyplot as plt
from datetime import date, timedelta
from fbprophet import Prophet


# Load test data: log-transformed daily page views for the Wikipedia page for Peyton Manning.
df = pd.read_csv("D:/Projects/prophet/data.csv")
a = date(2013, 12, 10)
if ((str)(df['ds']) > "2012-12-10") :
    print("aaa")
else: print("sss")

future = list()
a = "2012-12-10"
for index, row in df.iterrows():
    if ((str)(row['ds']) > (str)(a)) :
        future.append(row['ds'])

print(future)


\\\\\\\\\\\\\\\\\\\\\\\\\
//максимальное число в столбце 
>>> df2=pd.DataFrame({'A':[1,5,0], 'B':[3, 5, 6]})
>>> df2['A'].max()
5